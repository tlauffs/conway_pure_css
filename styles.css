:root {
  /* initial values : 1 = alive cell; 0 = dead cell */
  /* feel free to change these */
  --cell-0-value-step-0: 0;
  --cell-1-value-step-0: 0;
  --cell-2-value-step-0: 0;
  --cell-3-value-step-0: 0;
  --cell-4-value-step-0: 0;
  --cell-5-value-step-0: 0;
  --cell-6-value-step-0: 0;
  --cell-7-value-step-0: 0;
  --cell-8-value-step-0: 0;
  --cell-9-value-step-0: 1;
  --cell-10-value-step-0: 0;
  --cell-11-value-step-0: 0;
  --cell-12-value-step-0: 0;
  --cell-13-value-step-0: 1;
  --cell-14-value-step-0: 0;
  --cell-15-value-step-0: 1;
  --cell-16-value-step-0: 0;
  --cell-17-value-step-0: 0;
  --cell-18-value-step-0: 0;
  --cell-19-value-step-0: 0;
  --cell-20-value-step-0: 1;
  --cell-21-value-step-0: 1;
  --cell-22-value-step-0: 0;
  --cell-23-value-step-0: 0;
  --cell-24-value-step-0: 0;
  --cell-25-value-step-0: 0;
  --cell-26-value-step-0: 0;
  --cell-27-value-step-0: 0;
  --cell-28-value-step-0: 0;
  --cell-29-value-step-0: 0;
  --cell-30-value-step-0: 0;
  --cell-31-value-step-0: 0;
  --cell-32-value-step-0: 0;
  --cell-33-value-step-0: 0;
  --cell-34-value-step-0: 0;
  --cell-35-value-step-0: 0;
  /* calc alive neighbors of cell */
  --cell-0-alive-neighbors-step-1: calc(
    var(--cell-1-value-step-0) +
      var(--cell-5-value-step-0) +
      var(--cell-6-value-step-0) +
      var(--cell-7-value-step-0) +
      var(--cell-35-value-step-0) +
      var(--cell-31-value-step-0) +
      var(--cell-30-value-step-0) +
      var(--cell-29-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-0-step-1: max(
    calc(
      var(--cell-0-alive-neighbors-step-1) +
        var(--cell-0-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-0-step-1: max(
    calc(
    4 - var(--cell-0-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-0-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-0-step-1) *
        var(--more-then-3-cell-0-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-1-alive-neighbors-step-1: calc(
    var(--cell-2-value-step-0) +
      var(--cell-6-value-step-0) +
      var(--cell-7-value-step-0) +
      var(--cell-8-value-step-0) +
      var(--cell-0-value-step-0) +
      var(--cell-32-value-step-0) +
      var(--cell-31-value-step-0) +
      var(--cell-30-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-1-step-1: max(
    calc(
      var(--cell-1-alive-neighbors-step-1) +
        var(--cell-1-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-1-step-1: max(
    calc(
    4 - var(--cell-1-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-1-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-1-step-1) *
        var(--more-then-3-cell-1-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-2-alive-neighbors-step-1: calc(
    var(--cell-3-value-step-0) +
      var(--cell-7-value-step-0) +
      var(--cell-8-value-step-0) +
      var(--cell-9-value-step-0) +
      var(--cell-1-value-step-0) +
      var(--cell-33-value-step-0) +
      var(--cell-32-value-step-0) +
      var(--cell-31-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-2-step-1: max(
    calc(
      var(--cell-2-alive-neighbors-step-1) +
        var(--cell-2-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-2-step-1: max(
    calc(
    4 - var(--cell-2-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-2-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-2-step-1) *
        var(--more-then-3-cell-2-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-3-alive-neighbors-step-1: calc(
    var(--cell-4-value-step-0) +
      var(--cell-8-value-step-0) +
      var(--cell-9-value-step-0) +
      var(--cell-10-value-step-0) +
      var(--cell-2-value-step-0) +
      var(--cell-34-value-step-0) +
      var(--cell-33-value-step-0) +
      var(--cell-32-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-3-step-1: max(
    calc(
      var(--cell-3-alive-neighbors-step-1) +
        var(--cell-3-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-3-step-1: max(
    calc(
    4 - var(--cell-3-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-3-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-3-step-1) *
        var(--more-then-3-cell-3-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-4-alive-neighbors-step-1: calc(
    var(--cell-5-value-step-0) +
      var(--cell-9-value-step-0) +
      var(--cell-10-value-step-0) +
      var(--cell-11-value-step-0) +
      var(--cell-3-value-step-0) +
      var(--cell-35-value-step-0) +
      var(--cell-34-value-step-0) +
      var(--cell-33-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-4-step-1: max(
    calc(
      var(--cell-4-alive-neighbors-step-1) +
        var(--cell-4-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-4-step-1: max(
    calc(
    4 - var(--cell-4-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-4-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-4-step-1) *
        var(--more-then-3-cell-4-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-5-alive-neighbors-step-1: calc(
    var(--cell-6-value-step-0) +
      var(--cell-10-value-step-0) +
      var(--cell-11-value-step-0) +
      var(--cell-12-value-step-0) +
      var(--cell-4-value-step-0) +
      var(--cell-0-value-step-0) +
      var(--cell-35-value-step-0) +
      var(--cell-34-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-5-step-1: max(
    calc(
      var(--cell-5-alive-neighbors-step-1) +
        var(--cell-5-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-5-step-1: max(
    calc(
    4 - var(--cell-5-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-5-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-5-step-1) *
        var(--more-then-3-cell-5-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-6-alive-neighbors-step-1: calc(
    var(--cell-7-value-step-0) +
      var(--cell-11-value-step-0) +
      var(--cell-12-value-step-0) +
      var(--cell-13-value-step-0) +
      var(--cell-5-value-step-0) +
      var(--cell-1-value-step-0) +
      var(--cell-0-value-step-0) +
      var(--cell-35-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-6-step-1: max(
    calc(
      var(--cell-6-alive-neighbors-step-1) +
        var(--cell-6-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-6-step-1: max(
    calc(
    4 - var(--cell-6-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-6-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-6-step-1) *
        var(--more-then-3-cell-6-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-7-alive-neighbors-step-1: calc(
    var(--cell-8-value-step-0) +
      var(--cell-12-value-step-0) +
      var(--cell-13-value-step-0) +
      var(--cell-14-value-step-0) +
      var(--cell-6-value-step-0) +
      var(--cell-2-value-step-0) +
      var(--cell-1-value-step-0) +
      var(--cell-0-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-7-step-1: max(
    calc(
      var(--cell-7-alive-neighbors-step-1) +
        var(--cell-7-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-7-step-1: max(
    calc(
    4 - var(--cell-7-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-7-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-7-step-1) *
        var(--more-then-3-cell-7-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-8-alive-neighbors-step-1: calc(
    var(--cell-9-value-step-0) +
      var(--cell-13-value-step-0) +
      var(--cell-14-value-step-0) +
      var(--cell-15-value-step-0) +
      var(--cell-7-value-step-0) +
      var(--cell-3-value-step-0) +
      var(--cell-2-value-step-0) +
      var(--cell-1-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-8-step-1: max(
    calc(
      var(--cell-8-alive-neighbors-step-1) +
        var(--cell-8-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-8-step-1: max(
    calc(
    4 - var(--cell-8-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-8-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-8-step-1) *
        var(--more-then-3-cell-8-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-9-alive-neighbors-step-1: calc(
    var(--cell-10-value-step-0) +
      var(--cell-14-value-step-0) +
      var(--cell-15-value-step-0) +
      var(--cell-16-value-step-0) +
      var(--cell-8-value-step-0) +
      var(--cell-4-value-step-0) +
      var(--cell-3-value-step-0) +
      var(--cell-2-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-9-step-1: max(
    calc(
      var(--cell-9-alive-neighbors-step-1) +
        var(--cell-9-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-9-step-1: max(
    calc(
    4 - var(--cell-9-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-9-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-9-step-1) *
        var(--more-then-3-cell-9-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-10-alive-neighbors-step-1: calc(
    var(--cell-11-value-step-0) +
      var(--cell-15-value-step-0) +
      var(--cell-16-value-step-0) +
      var(--cell-17-value-step-0) +
      var(--cell-9-value-step-0) +
      var(--cell-5-value-step-0) +
      var(--cell-4-value-step-0) +
      var(--cell-3-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-10-step-1: max(
    calc(
      var(--cell-10-alive-neighbors-step-1) +
        var(--cell-10-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-10-step-1: max(
    calc(
    4 - var(--cell-10-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-10-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-10-step-1) *
        var(--more-then-3-cell-10-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-11-alive-neighbors-step-1: calc(
    var(--cell-12-value-step-0) +
      var(--cell-16-value-step-0) +
      var(--cell-17-value-step-0) +
      var(--cell-18-value-step-0) +
      var(--cell-10-value-step-0) +
      var(--cell-6-value-step-0) +
      var(--cell-5-value-step-0) +
      var(--cell-4-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-11-step-1: max(
    calc(
      var(--cell-11-alive-neighbors-step-1) +
        var(--cell-11-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-11-step-1: max(
    calc(
    4 - var(--cell-11-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-11-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-11-step-1) *
        var(--more-then-3-cell-11-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-12-alive-neighbors-step-1: calc(
    var(--cell-13-value-step-0) +
      var(--cell-17-value-step-0) +
      var(--cell-18-value-step-0) +
      var(--cell-19-value-step-0) +
      var(--cell-11-value-step-0) +
      var(--cell-7-value-step-0) +
      var(--cell-6-value-step-0) +
      var(--cell-5-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-12-step-1: max(
    calc(
      var(--cell-12-alive-neighbors-step-1) +
        var(--cell-12-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-12-step-1: max(
    calc(
    4 - var(--cell-12-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-12-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-12-step-1) *
        var(--more-then-3-cell-12-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-13-alive-neighbors-step-1: calc(
    var(--cell-14-value-step-0) +
      var(--cell-18-value-step-0) +
      var(--cell-19-value-step-0) +
      var(--cell-20-value-step-0) +
      var(--cell-12-value-step-0) +
      var(--cell-8-value-step-0) +
      var(--cell-7-value-step-0) +
      var(--cell-6-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-13-step-1: max(
    calc(
      var(--cell-13-alive-neighbors-step-1) +
        var(--cell-13-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-13-step-1: max(
    calc(
    4 - var(--cell-13-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-13-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-13-step-1) *
        var(--more-then-3-cell-13-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-14-alive-neighbors-step-1: calc(
    var(--cell-15-value-step-0) +
      var(--cell-19-value-step-0) +
      var(--cell-20-value-step-0) +
      var(--cell-21-value-step-0) +
      var(--cell-13-value-step-0) +
      var(--cell-9-value-step-0) +
      var(--cell-8-value-step-0) +
      var(--cell-7-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-14-step-1: max(
    calc(
      var(--cell-14-alive-neighbors-step-1) +
        var(--cell-14-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-14-step-1: max(
    calc(
    4 - var(--cell-14-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-14-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-14-step-1) *
        var(--more-then-3-cell-14-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-15-alive-neighbors-step-1: calc(
    var(--cell-16-value-step-0) +
      var(--cell-20-value-step-0) +
      var(--cell-21-value-step-0) +
      var(--cell-22-value-step-0) +
      var(--cell-14-value-step-0) +
      var(--cell-10-value-step-0) +
      var(--cell-9-value-step-0) +
      var(--cell-8-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-15-step-1: max(
    calc(
      var(--cell-15-alive-neighbors-step-1) +
        var(--cell-15-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-15-step-1: max(
    calc(
    4 - var(--cell-15-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-15-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-15-step-1) *
        var(--more-then-3-cell-15-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-16-alive-neighbors-step-1: calc(
    var(--cell-17-value-step-0) +
      var(--cell-21-value-step-0) +
      var(--cell-22-value-step-0) +
      var(--cell-23-value-step-0) +
      var(--cell-15-value-step-0) +
      var(--cell-11-value-step-0) +
      var(--cell-10-value-step-0) +
      var(--cell-9-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-16-step-1: max(
    calc(
      var(--cell-16-alive-neighbors-step-1) +
        var(--cell-16-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-16-step-1: max(
    calc(
    4 - var(--cell-16-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-16-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-16-step-1) *
        var(--more-then-3-cell-16-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-17-alive-neighbors-step-1: calc(
    var(--cell-18-value-step-0) +
      var(--cell-22-value-step-0) +
      var(--cell-23-value-step-0) +
      var(--cell-24-value-step-0) +
      var(--cell-16-value-step-0) +
      var(--cell-12-value-step-0) +
      var(--cell-11-value-step-0) +
      var(--cell-10-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-17-step-1: max(
    calc(
      var(--cell-17-alive-neighbors-step-1) +
        var(--cell-17-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-17-step-1: max(
    calc(
    4 - var(--cell-17-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-17-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-17-step-1) *
        var(--more-then-3-cell-17-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-18-alive-neighbors-step-1: calc(
    var(--cell-19-value-step-0) +
      var(--cell-23-value-step-0) +
      var(--cell-24-value-step-0) +
      var(--cell-25-value-step-0) +
      var(--cell-17-value-step-0) +
      var(--cell-13-value-step-0) +
      var(--cell-12-value-step-0) +
      var(--cell-11-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-18-step-1: max(
    calc(
      var(--cell-18-alive-neighbors-step-1) +
        var(--cell-18-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-18-step-1: max(
    calc(
    4 - var(--cell-18-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-18-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-18-step-1) *
        var(--more-then-3-cell-18-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-19-alive-neighbors-step-1: calc(
    var(--cell-20-value-step-0) +
      var(--cell-24-value-step-0) +
      var(--cell-25-value-step-0) +
      var(--cell-26-value-step-0) +
      var(--cell-18-value-step-0) +
      var(--cell-14-value-step-0) +
      var(--cell-13-value-step-0) +
      var(--cell-12-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-19-step-1: max(
    calc(
      var(--cell-19-alive-neighbors-step-1) +
        var(--cell-19-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-19-step-1: max(
    calc(
    4 - var(--cell-19-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-19-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-19-step-1) *
        var(--more-then-3-cell-19-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-20-alive-neighbors-step-1: calc(
    var(--cell-21-value-step-0) +
      var(--cell-25-value-step-0) +
      var(--cell-26-value-step-0) +
      var(--cell-27-value-step-0) +
      var(--cell-19-value-step-0) +
      var(--cell-15-value-step-0) +
      var(--cell-14-value-step-0) +
      var(--cell-13-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-20-step-1: max(
    calc(
      var(--cell-20-alive-neighbors-step-1) +
        var(--cell-20-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-20-step-1: max(
    calc(
    4 - var(--cell-20-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-20-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-20-step-1) *
        var(--more-then-3-cell-20-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-21-alive-neighbors-step-1: calc(
    var(--cell-22-value-step-0) +
      var(--cell-26-value-step-0) +
      var(--cell-27-value-step-0) +
      var(--cell-28-value-step-0) +
      var(--cell-20-value-step-0) +
      var(--cell-16-value-step-0) +
      var(--cell-15-value-step-0) +
      var(--cell-14-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-21-step-1: max(
    calc(
      var(--cell-21-alive-neighbors-step-1) +
        var(--cell-21-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-21-step-1: max(
    calc(
    4 - var(--cell-21-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-21-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-21-step-1) *
        var(--more-then-3-cell-21-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-22-alive-neighbors-step-1: calc(
    var(--cell-23-value-step-0) +
      var(--cell-27-value-step-0) +
      var(--cell-28-value-step-0) +
      var(--cell-29-value-step-0) +
      var(--cell-21-value-step-0) +
      var(--cell-17-value-step-0) +
      var(--cell-16-value-step-0) +
      var(--cell-15-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-22-step-1: max(
    calc(
      var(--cell-22-alive-neighbors-step-1) +
        var(--cell-22-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-22-step-1: max(
    calc(
    4 - var(--cell-22-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-22-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-22-step-1) *
        var(--more-then-3-cell-22-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-23-alive-neighbors-step-1: calc(
    var(--cell-24-value-step-0) +
      var(--cell-28-value-step-0) +
      var(--cell-29-value-step-0) +
      var(--cell-30-value-step-0) +
      var(--cell-22-value-step-0) +
      var(--cell-18-value-step-0) +
      var(--cell-17-value-step-0) +
      var(--cell-16-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-23-step-1: max(
    calc(
      var(--cell-23-alive-neighbors-step-1) +
        var(--cell-23-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-23-step-1: max(
    calc(
    4 - var(--cell-23-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-23-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-23-step-1) *
        var(--more-then-3-cell-23-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-24-alive-neighbors-step-1: calc(
    var(--cell-25-value-step-0) +
      var(--cell-29-value-step-0) +
      var(--cell-30-value-step-0) +
      var(--cell-31-value-step-0) +
      var(--cell-23-value-step-0) +
      var(--cell-19-value-step-0) +
      var(--cell-18-value-step-0) +
      var(--cell-17-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-24-step-1: max(
    calc(
      var(--cell-24-alive-neighbors-step-1) +
        var(--cell-24-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-24-step-1: max(
    calc(
    4 - var(--cell-24-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-24-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-24-step-1) *
        var(--more-then-3-cell-24-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-25-alive-neighbors-step-1: calc(
    var(--cell-26-value-step-0) +
      var(--cell-30-value-step-0) +
      var(--cell-31-value-step-0) +
      var(--cell-32-value-step-0) +
      var(--cell-24-value-step-0) +
      var(--cell-20-value-step-0) +
      var(--cell-19-value-step-0) +
      var(--cell-18-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-25-step-1: max(
    calc(
      var(--cell-25-alive-neighbors-step-1) +
        var(--cell-25-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-25-step-1: max(
    calc(
    4 - var(--cell-25-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-25-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-25-step-1) *
        var(--more-then-3-cell-25-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-26-alive-neighbors-step-1: calc(
    var(--cell-27-value-step-0) +
      var(--cell-31-value-step-0) +
      var(--cell-32-value-step-0) +
      var(--cell-33-value-step-0) +
      var(--cell-25-value-step-0) +
      var(--cell-21-value-step-0) +
      var(--cell-20-value-step-0) +
      var(--cell-19-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-26-step-1: max(
    calc(
      var(--cell-26-alive-neighbors-step-1) +
        var(--cell-26-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-26-step-1: max(
    calc(
    4 - var(--cell-26-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-26-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-26-step-1) *
        var(--more-then-3-cell-26-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-27-alive-neighbors-step-1: calc(
    var(--cell-28-value-step-0) +
      var(--cell-32-value-step-0) +
      var(--cell-33-value-step-0) +
      var(--cell-34-value-step-0) +
      var(--cell-26-value-step-0) +
      var(--cell-22-value-step-0) +
      var(--cell-21-value-step-0) +
      var(--cell-20-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-27-step-1: max(
    calc(
      var(--cell-27-alive-neighbors-step-1) +
        var(--cell-27-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-27-step-1: max(
    calc(
    4 - var(--cell-27-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-27-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-27-step-1) *
        var(--more-then-3-cell-27-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-28-alive-neighbors-step-1: calc(
    var(--cell-29-value-step-0) +
      var(--cell-33-value-step-0) +
      var(--cell-34-value-step-0) +
      var(--cell-35-value-step-0) +
      var(--cell-27-value-step-0) +
      var(--cell-23-value-step-0) +
      var(--cell-22-value-step-0) +
      var(--cell-21-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-28-step-1: max(
    calc(
      var(--cell-28-alive-neighbors-step-1) +
        var(--cell-28-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-28-step-1: max(
    calc(
    4 - var(--cell-28-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-28-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-28-step-1) *
        var(--more-then-3-cell-28-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-29-alive-neighbors-step-1: calc(
    var(--cell-30-value-step-0) +
      var(--cell-34-value-step-0) +
      var(--cell-35-value-step-0) +
      var(--cell-0-value-step-0) +
      var(--cell-28-value-step-0) +
      var(--cell-24-value-step-0) +
      var(--cell-23-value-step-0) +
      var(--cell-22-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-29-step-1: max(
    calc(
      var(--cell-29-alive-neighbors-step-1) +
        var(--cell-29-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-29-step-1: max(
    calc(
    4 - var(--cell-29-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-29-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-29-step-1) *
        var(--more-then-3-cell-29-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-30-alive-neighbors-step-1: calc(
    var(--cell-31-value-step-0) +
      var(--cell-35-value-step-0) +
      var(--cell-0-value-step-0) +
      var(--cell-1-value-step-0) +
      var(--cell-29-value-step-0) +
      var(--cell-25-value-step-0) +
      var(--cell-24-value-step-0) +
      var(--cell-23-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-30-step-1: max(
    calc(
      var(--cell-30-alive-neighbors-step-1) +
        var(--cell-30-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-30-step-1: max(
    calc(
    4 - var(--cell-30-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-30-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-30-step-1) *
        var(--more-then-3-cell-30-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-31-alive-neighbors-step-1: calc(
    var(--cell-32-value-step-0) +
      var(--cell-0-value-step-0) +
      var(--cell-1-value-step-0) +
      var(--cell-2-value-step-0) +
      var(--cell-30-value-step-0) +
      var(--cell-26-value-step-0) +
      var(--cell-25-value-step-0) +
      var(--cell-24-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-31-step-1: max(
    calc(
      var(--cell-31-alive-neighbors-step-1) +
        var(--cell-31-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-31-step-1: max(
    calc(
    4 - var(--cell-31-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-31-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-31-step-1) *
        var(--more-then-3-cell-31-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-32-alive-neighbors-step-1: calc(
    var(--cell-33-value-step-0) +
      var(--cell-1-value-step-0) +
      var(--cell-2-value-step-0) +
      var(--cell-3-value-step-0) +
      var(--cell-31-value-step-0) +
      var(--cell-27-value-step-0) +
      var(--cell-26-value-step-0) +
      var(--cell-25-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-32-step-1: max(
    calc(
      var(--cell-32-alive-neighbors-step-1) +
        var(--cell-32-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-32-step-1: max(
    calc(
    4 - var(--cell-32-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-32-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-32-step-1) *
        var(--more-then-3-cell-32-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-33-alive-neighbors-step-1: calc(
    var(--cell-34-value-step-0) +
      var(--cell-2-value-step-0) +
      var(--cell-3-value-step-0) +
      var(--cell-4-value-step-0) +
      var(--cell-32-value-step-0) +
      var(--cell-28-value-step-0) +
      var(--cell-27-value-step-0) +
      var(--cell-26-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-33-step-1: max(
    calc(
      var(--cell-33-alive-neighbors-step-1) +
        var(--cell-33-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-33-step-1: max(
    calc(
    4 - var(--cell-33-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-33-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-33-step-1) *
        var(--more-then-3-cell-33-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-34-alive-neighbors-step-1: calc(
    var(--cell-35-value-step-0) +
      var(--cell-3-value-step-0) +
      var(--cell-4-value-step-0) +
      var(--cell-5-value-step-0) +
      var(--cell-33-value-step-0) +
      var(--cell-29-value-step-0) +
      var(--cell-28-value-step-0) +
      var(--cell-27-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-34-step-1: max(
    calc(
      var(--cell-34-alive-neighbors-step-1) +
        var(--cell-34-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-34-step-1: max(
    calc(
    4 - var(--cell-34-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-34-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-34-step-1) *
        var(--more-then-3-cell-34-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-35-alive-neighbors-step-1: calc(
    var(--cell-0-value-step-0) +
      var(--cell-4-value-step-0) +
      var(--cell-5-value-step-0) +
      var(--cell-6-value-step-0) +
      var(--cell-34-value-step-0) +
      var(--cell-30-value-step-0) +
      var(--cell-29-value-step-0) +
      var(--cell-28-value-step-0)
  );
  /* game logic */
  --fewer-then-2-cell-35-step-1: max(
    calc(
      var(--cell-35-alive-neighbors-step-1) +
        var(--cell-35-value-step-0) -
        2
    ),
    0
  );
  --more-then-3-cell-35-step-1: max(
    calc(
    4 - var(--cell-35-alive-neighbors-step-1)),
    0
  );
  /* calc final value */
  --cell-35-value-step-1: min(
    calc(
      var(--fewer-then-2-cell-35-step-1) *
        var(--more-then-3-cell-35-step-1)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-0-alive-neighbors-step-2: calc(
    var(--cell-1-value-step-1) +
      var(--cell-5-value-step-1) +
      var(--cell-6-value-step-1) +
      var(--cell-7-value-step-1) +
      var(--cell-35-value-step-1) +
      var(--cell-31-value-step-1) +
      var(--cell-30-value-step-1) +
      var(--cell-29-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-0-step-2: max(
    calc(
      var(--cell-0-alive-neighbors-step-2) +
        var(--cell-0-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-0-step-2: max(
    calc(
    4 - var(--cell-0-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-0-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-0-step-2) *
        var(--more-then-3-cell-0-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-1-alive-neighbors-step-2: calc(
    var(--cell-2-value-step-1) +
      var(--cell-6-value-step-1) +
      var(--cell-7-value-step-1) +
      var(--cell-8-value-step-1) +
      var(--cell-0-value-step-1) +
      var(--cell-32-value-step-1) +
      var(--cell-31-value-step-1) +
      var(--cell-30-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-1-step-2: max(
    calc(
      var(--cell-1-alive-neighbors-step-2) +
        var(--cell-1-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-1-step-2: max(
    calc(
    4 - var(--cell-1-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-1-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-1-step-2) *
        var(--more-then-3-cell-1-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-2-alive-neighbors-step-2: calc(
    var(--cell-3-value-step-1) +
      var(--cell-7-value-step-1) +
      var(--cell-8-value-step-1) +
      var(--cell-9-value-step-1) +
      var(--cell-1-value-step-1) +
      var(--cell-33-value-step-1) +
      var(--cell-32-value-step-1) +
      var(--cell-31-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-2-step-2: max(
    calc(
      var(--cell-2-alive-neighbors-step-2) +
        var(--cell-2-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-2-step-2: max(
    calc(
    4 - var(--cell-2-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-2-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-2-step-2) *
        var(--more-then-3-cell-2-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-3-alive-neighbors-step-2: calc(
    var(--cell-4-value-step-1) +
      var(--cell-8-value-step-1) +
      var(--cell-9-value-step-1) +
      var(--cell-10-value-step-1) +
      var(--cell-2-value-step-1) +
      var(--cell-34-value-step-1) +
      var(--cell-33-value-step-1) +
      var(--cell-32-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-3-step-2: max(
    calc(
      var(--cell-3-alive-neighbors-step-2) +
        var(--cell-3-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-3-step-2: max(
    calc(
    4 - var(--cell-3-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-3-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-3-step-2) *
        var(--more-then-3-cell-3-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-4-alive-neighbors-step-2: calc(
    var(--cell-5-value-step-1) +
      var(--cell-9-value-step-1) +
      var(--cell-10-value-step-1) +
      var(--cell-11-value-step-1) +
      var(--cell-3-value-step-1) +
      var(--cell-35-value-step-1) +
      var(--cell-34-value-step-1) +
      var(--cell-33-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-4-step-2: max(
    calc(
      var(--cell-4-alive-neighbors-step-2) +
        var(--cell-4-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-4-step-2: max(
    calc(
    4 - var(--cell-4-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-4-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-4-step-2) *
        var(--more-then-3-cell-4-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-5-alive-neighbors-step-2: calc(
    var(--cell-6-value-step-1) +
      var(--cell-10-value-step-1) +
      var(--cell-11-value-step-1) +
      var(--cell-12-value-step-1) +
      var(--cell-4-value-step-1) +
      var(--cell-0-value-step-1) +
      var(--cell-35-value-step-1) +
      var(--cell-34-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-5-step-2: max(
    calc(
      var(--cell-5-alive-neighbors-step-2) +
        var(--cell-5-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-5-step-2: max(
    calc(
    4 - var(--cell-5-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-5-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-5-step-2) *
        var(--more-then-3-cell-5-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-6-alive-neighbors-step-2: calc(
    var(--cell-7-value-step-1) +
      var(--cell-11-value-step-1) +
      var(--cell-12-value-step-1) +
      var(--cell-13-value-step-1) +
      var(--cell-5-value-step-1) +
      var(--cell-1-value-step-1) +
      var(--cell-0-value-step-1) +
      var(--cell-35-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-6-step-2: max(
    calc(
      var(--cell-6-alive-neighbors-step-2) +
        var(--cell-6-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-6-step-2: max(
    calc(
    4 - var(--cell-6-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-6-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-6-step-2) *
        var(--more-then-3-cell-6-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-7-alive-neighbors-step-2: calc(
    var(--cell-8-value-step-1) +
      var(--cell-12-value-step-1) +
      var(--cell-13-value-step-1) +
      var(--cell-14-value-step-1) +
      var(--cell-6-value-step-1) +
      var(--cell-2-value-step-1) +
      var(--cell-1-value-step-1) +
      var(--cell-0-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-7-step-2: max(
    calc(
      var(--cell-7-alive-neighbors-step-2) +
        var(--cell-7-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-7-step-2: max(
    calc(
    4 - var(--cell-7-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-7-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-7-step-2) *
        var(--more-then-3-cell-7-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-8-alive-neighbors-step-2: calc(
    var(--cell-9-value-step-1) +
      var(--cell-13-value-step-1) +
      var(--cell-14-value-step-1) +
      var(--cell-15-value-step-1) +
      var(--cell-7-value-step-1) +
      var(--cell-3-value-step-1) +
      var(--cell-2-value-step-1) +
      var(--cell-1-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-8-step-2: max(
    calc(
      var(--cell-8-alive-neighbors-step-2) +
        var(--cell-8-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-8-step-2: max(
    calc(
    4 - var(--cell-8-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-8-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-8-step-2) *
        var(--more-then-3-cell-8-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-9-alive-neighbors-step-2: calc(
    var(--cell-10-value-step-1) +
      var(--cell-14-value-step-1) +
      var(--cell-15-value-step-1) +
      var(--cell-16-value-step-1) +
      var(--cell-8-value-step-1) +
      var(--cell-4-value-step-1) +
      var(--cell-3-value-step-1) +
      var(--cell-2-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-9-step-2: max(
    calc(
      var(--cell-9-alive-neighbors-step-2) +
        var(--cell-9-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-9-step-2: max(
    calc(
    4 - var(--cell-9-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-9-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-9-step-2) *
        var(--more-then-3-cell-9-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-10-alive-neighbors-step-2: calc(
    var(--cell-11-value-step-1) +
      var(--cell-15-value-step-1) +
      var(--cell-16-value-step-1) +
      var(--cell-17-value-step-1) +
      var(--cell-9-value-step-1) +
      var(--cell-5-value-step-1) +
      var(--cell-4-value-step-1) +
      var(--cell-3-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-10-step-2: max(
    calc(
      var(--cell-10-alive-neighbors-step-2) +
        var(--cell-10-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-10-step-2: max(
    calc(
    4 - var(--cell-10-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-10-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-10-step-2) *
        var(--more-then-3-cell-10-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-11-alive-neighbors-step-2: calc(
    var(--cell-12-value-step-1) +
      var(--cell-16-value-step-1) +
      var(--cell-17-value-step-1) +
      var(--cell-18-value-step-1) +
      var(--cell-10-value-step-1) +
      var(--cell-6-value-step-1) +
      var(--cell-5-value-step-1) +
      var(--cell-4-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-11-step-2: max(
    calc(
      var(--cell-11-alive-neighbors-step-2) +
        var(--cell-11-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-11-step-2: max(
    calc(
    4 - var(--cell-11-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-11-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-11-step-2) *
        var(--more-then-3-cell-11-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-12-alive-neighbors-step-2: calc(
    var(--cell-13-value-step-1) +
      var(--cell-17-value-step-1) +
      var(--cell-18-value-step-1) +
      var(--cell-19-value-step-1) +
      var(--cell-11-value-step-1) +
      var(--cell-7-value-step-1) +
      var(--cell-6-value-step-1) +
      var(--cell-5-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-12-step-2: max(
    calc(
      var(--cell-12-alive-neighbors-step-2) +
        var(--cell-12-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-12-step-2: max(
    calc(
    4 - var(--cell-12-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-12-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-12-step-2) *
        var(--more-then-3-cell-12-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-13-alive-neighbors-step-2: calc(
    var(--cell-14-value-step-1) +
      var(--cell-18-value-step-1) +
      var(--cell-19-value-step-1) +
      var(--cell-20-value-step-1) +
      var(--cell-12-value-step-1) +
      var(--cell-8-value-step-1) +
      var(--cell-7-value-step-1) +
      var(--cell-6-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-13-step-2: max(
    calc(
      var(--cell-13-alive-neighbors-step-2) +
        var(--cell-13-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-13-step-2: max(
    calc(
    4 - var(--cell-13-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-13-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-13-step-2) *
        var(--more-then-3-cell-13-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-14-alive-neighbors-step-2: calc(
    var(--cell-15-value-step-1) +
      var(--cell-19-value-step-1) +
      var(--cell-20-value-step-1) +
      var(--cell-21-value-step-1) +
      var(--cell-13-value-step-1) +
      var(--cell-9-value-step-1) +
      var(--cell-8-value-step-1) +
      var(--cell-7-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-14-step-2: max(
    calc(
      var(--cell-14-alive-neighbors-step-2) +
        var(--cell-14-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-14-step-2: max(
    calc(
    4 - var(--cell-14-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-14-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-14-step-2) *
        var(--more-then-3-cell-14-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-15-alive-neighbors-step-2: calc(
    var(--cell-16-value-step-1) +
      var(--cell-20-value-step-1) +
      var(--cell-21-value-step-1) +
      var(--cell-22-value-step-1) +
      var(--cell-14-value-step-1) +
      var(--cell-10-value-step-1) +
      var(--cell-9-value-step-1) +
      var(--cell-8-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-15-step-2: max(
    calc(
      var(--cell-15-alive-neighbors-step-2) +
        var(--cell-15-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-15-step-2: max(
    calc(
    4 - var(--cell-15-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-15-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-15-step-2) *
        var(--more-then-3-cell-15-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-16-alive-neighbors-step-2: calc(
    var(--cell-17-value-step-1) +
      var(--cell-21-value-step-1) +
      var(--cell-22-value-step-1) +
      var(--cell-23-value-step-1) +
      var(--cell-15-value-step-1) +
      var(--cell-11-value-step-1) +
      var(--cell-10-value-step-1) +
      var(--cell-9-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-16-step-2: max(
    calc(
      var(--cell-16-alive-neighbors-step-2) +
        var(--cell-16-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-16-step-2: max(
    calc(
    4 - var(--cell-16-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-16-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-16-step-2) *
        var(--more-then-3-cell-16-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-17-alive-neighbors-step-2: calc(
    var(--cell-18-value-step-1) +
      var(--cell-22-value-step-1) +
      var(--cell-23-value-step-1) +
      var(--cell-24-value-step-1) +
      var(--cell-16-value-step-1) +
      var(--cell-12-value-step-1) +
      var(--cell-11-value-step-1) +
      var(--cell-10-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-17-step-2: max(
    calc(
      var(--cell-17-alive-neighbors-step-2) +
        var(--cell-17-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-17-step-2: max(
    calc(
    4 - var(--cell-17-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-17-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-17-step-2) *
        var(--more-then-3-cell-17-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-18-alive-neighbors-step-2: calc(
    var(--cell-19-value-step-1) +
      var(--cell-23-value-step-1) +
      var(--cell-24-value-step-1) +
      var(--cell-25-value-step-1) +
      var(--cell-17-value-step-1) +
      var(--cell-13-value-step-1) +
      var(--cell-12-value-step-1) +
      var(--cell-11-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-18-step-2: max(
    calc(
      var(--cell-18-alive-neighbors-step-2) +
        var(--cell-18-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-18-step-2: max(
    calc(
    4 - var(--cell-18-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-18-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-18-step-2) *
        var(--more-then-3-cell-18-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-19-alive-neighbors-step-2: calc(
    var(--cell-20-value-step-1) +
      var(--cell-24-value-step-1) +
      var(--cell-25-value-step-1) +
      var(--cell-26-value-step-1) +
      var(--cell-18-value-step-1) +
      var(--cell-14-value-step-1) +
      var(--cell-13-value-step-1) +
      var(--cell-12-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-19-step-2: max(
    calc(
      var(--cell-19-alive-neighbors-step-2) +
        var(--cell-19-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-19-step-2: max(
    calc(
    4 - var(--cell-19-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-19-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-19-step-2) *
        var(--more-then-3-cell-19-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-20-alive-neighbors-step-2: calc(
    var(--cell-21-value-step-1) +
      var(--cell-25-value-step-1) +
      var(--cell-26-value-step-1) +
      var(--cell-27-value-step-1) +
      var(--cell-19-value-step-1) +
      var(--cell-15-value-step-1) +
      var(--cell-14-value-step-1) +
      var(--cell-13-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-20-step-2: max(
    calc(
      var(--cell-20-alive-neighbors-step-2) +
        var(--cell-20-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-20-step-2: max(
    calc(
    4 - var(--cell-20-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-20-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-20-step-2) *
        var(--more-then-3-cell-20-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-21-alive-neighbors-step-2: calc(
    var(--cell-22-value-step-1) +
      var(--cell-26-value-step-1) +
      var(--cell-27-value-step-1) +
      var(--cell-28-value-step-1) +
      var(--cell-20-value-step-1) +
      var(--cell-16-value-step-1) +
      var(--cell-15-value-step-1) +
      var(--cell-14-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-21-step-2: max(
    calc(
      var(--cell-21-alive-neighbors-step-2) +
        var(--cell-21-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-21-step-2: max(
    calc(
    4 - var(--cell-21-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-21-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-21-step-2) *
        var(--more-then-3-cell-21-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-22-alive-neighbors-step-2: calc(
    var(--cell-23-value-step-1) +
      var(--cell-27-value-step-1) +
      var(--cell-28-value-step-1) +
      var(--cell-29-value-step-1) +
      var(--cell-21-value-step-1) +
      var(--cell-17-value-step-1) +
      var(--cell-16-value-step-1) +
      var(--cell-15-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-22-step-2: max(
    calc(
      var(--cell-22-alive-neighbors-step-2) +
        var(--cell-22-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-22-step-2: max(
    calc(
    4 - var(--cell-22-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-22-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-22-step-2) *
        var(--more-then-3-cell-22-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-23-alive-neighbors-step-2: calc(
    var(--cell-24-value-step-1) +
      var(--cell-28-value-step-1) +
      var(--cell-29-value-step-1) +
      var(--cell-30-value-step-1) +
      var(--cell-22-value-step-1) +
      var(--cell-18-value-step-1) +
      var(--cell-17-value-step-1) +
      var(--cell-16-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-23-step-2: max(
    calc(
      var(--cell-23-alive-neighbors-step-2) +
        var(--cell-23-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-23-step-2: max(
    calc(
    4 - var(--cell-23-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-23-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-23-step-2) *
        var(--more-then-3-cell-23-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-24-alive-neighbors-step-2: calc(
    var(--cell-25-value-step-1) +
      var(--cell-29-value-step-1) +
      var(--cell-30-value-step-1) +
      var(--cell-31-value-step-1) +
      var(--cell-23-value-step-1) +
      var(--cell-19-value-step-1) +
      var(--cell-18-value-step-1) +
      var(--cell-17-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-24-step-2: max(
    calc(
      var(--cell-24-alive-neighbors-step-2) +
        var(--cell-24-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-24-step-2: max(
    calc(
    4 - var(--cell-24-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-24-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-24-step-2) *
        var(--more-then-3-cell-24-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-25-alive-neighbors-step-2: calc(
    var(--cell-26-value-step-1) +
      var(--cell-30-value-step-1) +
      var(--cell-31-value-step-1) +
      var(--cell-32-value-step-1) +
      var(--cell-24-value-step-1) +
      var(--cell-20-value-step-1) +
      var(--cell-19-value-step-1) +
      var(--cell-18-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-25-step-2: max(
    calc(
      var(--cell-25-alive-neighbors-step-2) +
        var(--cell-25-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-25-step-2: max(
    calc(
    4 - var(--cell-25-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-25-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-25-step-2) *
        var(--more-then-3-cell-25-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-26-alive-neighbors-step-2: calc(
    var(--cell-27-value-step-1) +
      var(--cell-31-value-step-1) +
      var(--cell-32-value-step-1) +
      var(--cell-33-value-step-1) +
      var(--cell-25-value-step-1) +
      var(--cell-21-value-step-1) +
      var(--cell-20-value-step-1) +
      var(--cell-19-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-26-step-2: max(
    calc(
      var(--cell-26-alive-neighbors-step-2) +
        var(--cell-26-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-26-step-2: max(
    calc(
    4 - var(--cell-26-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-26-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-26-step-2) *
        var(--more-then-3-cell-26-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-27-alive-neighbors-step-2: calc(
    var(--cell-28-value-step-1) +
      var(--cell-32-value-step-1) +
      var(--cell-33-value-step-1) +
      var(--cell-34-value-step-1) +
      var(--cell-26-value-step-1) +
      var(--cell-22-value-step-1) +
      var(--cell-21-value-step-1) +
      var(--cell-20-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-27-step-2: max(
    calc(
      var(--cell-27-alive-neighbors-step-2) +
        var(--cell-27-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-27-step-2: max(
    calc(
    4 - var(--cell-27-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-27-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-27-step-2) *
        var(--more-then-3-cell-27-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-28-alive-neighbors-step-2: calc(
    var(--cell-29-value-step-1) +
      var(--cell-33-value-step-1) +
      var(--cell-34-value-step-1) +
      var(--cell-35-value-step-1) +
      var(--cell-27-value-step-1) +
      var(--cell-23-value-step-1) +
      var(--cell-22-value-step-1) +
      var(--cell-21-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-28-step-2: max(
    calc(
      var(--cell-28-alive-neighbors-step-2) +
        var(--cell-28-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-28-step-2: max(
    calc(
    4 - var(--cell-28-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-28-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-28-step-2) *
        var(--more-then-3-cell-28-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-29-alive-neighbors-step-2: calc(
    var(--cell-30-value-step-1) +
      var(--cell-34-value-step-1) +
      var(--cell-35-value-step-1) +
      var(--cell-0-value-step-1) +
      var(--cell-28-value-step-1) +
      var(--cell-24-value-step-1) +
      var(--cell-23-value-step-1) +
      var(--cell-22-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-29-step-2: max(
    calc(
      var(--cell-29-alive-neighbors-step-2) +
        var(--cell-29-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-29-step-2: max(
    calc(
    4 - var(--cell-29-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-29-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-29-step-2) *
        var(--more-then-3-cell-29-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-30-alive-neighbors-step-2: calc(
    var(--cell-31-value-step-1) +
      var(--cell-35-value-step-1) +
      var(--cell-0-value-step-1) +
      var(--cell-1-value-step-1) +
      var(--cell-29-value-step-1) +
      var(--cell-25-value-step-1) +
      var(--cell-24-value-step-1) +
      var(--cell-23-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-30-step-2: max(
    calc(
      var(--cell-30-alive-neighbors-step-2) +
        var(--cell-30-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-30-step-2: max(
    calc(
    4 - var(--cell-30-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-30-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-30-step-2) *
        var(--more-then-3-cell-30-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-31-alive-neighbors-step-2: calc(
    var(--cell-32-value-step-1) +
      var(--cell-0-value-step-1) +
      var(--cell-1-value-step-1) +
      var(--cell-2-value-step-1) +
      var(--cell-30-value-step-1) +
      var(--cell-26-value-step-1) +
      var(--cell-25-value-step-1) +
      var(--cell-24-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-31-step-2: max(
    calc(
      var(--cell-31-alive-neighbors-step-2) +
        var(--cell-31-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-31-step-2: max(
    calc(
    4 - var(--cell-31-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-31-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-31-step-2) *
        var(--more-then-3-cell-31-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-32-alive-neighbors-step-2: calc(
    var(--cell-33-value-step-1) +
      var(--cell-1-value-step-1) +
      var(--cell-2-value-step-1) +
      var(--cell-3-value-step-1) +
      var(--cell-31-value-step-1) +
      var(--cell-27-value-step-1) +
      var(--cell-26-value-step-1) +
      var(--cell-25-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-32-step-2: max(
    calc(
      var(--cell-32-alive-neighbors-step-2) +
        var(--cell-32-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-32-step-2: max(
    calc(
    4 - var(--cell-32-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-32-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-32-step-2) *
        var(--more-then-3-cell-32-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-33-alive-neighbors-step-2: calc(
    var(--cell-34-value-step-1) +
      var(--cell-2-value-step-1) +
      var(--cell-3-value-step-1) +
      var(--cell-4-value-step-1) +
      var(--cell-32-value-step-1) +
      var(--cell-28-value-step-1) +
      var(--cell-27-value-step-1) +
      var(--cell-26-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-33-step-2: max(
    calc(
      var(--cell-33-alive-neighbors-step-2) +
        var(--cell-33-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-33-step-2: max(
    calc(
    4 - var(--cell-33-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-33-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-33-step-2) *
        var(--more-then-3-cell-33-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-34-alive-neighbors-step-2: calc(
    var(--cell-35-value-step-1) +
      var(--cell-3-value-step-1) +
      var(--cell-4-value-step-1) +
      var(--cell-5-value-step-1) +
      var(--cell-33-value-step-1) +
      var(--cell-29-value-step-1) +
      var(--cell-28-value-step-1) +
      var(--cell-27-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-34-step-2: max(
    calc(
      var(--cell-34-alive-neighbors-step-2) +
        var(--cell-34-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-34-step-2: max(
    calc(
    4 - var(--cell-34-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-34-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-34-step-2) *
        var(--more-then-3-cell-34-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-35-alive-neighbors-step-2: calc(
    var(--cell-0-value-step-1) +
      var(--cell-4-value-step-1) +
      var(--cell-5-value-step-1) +
      var(--cell-6-value-step-1) +
      var(--cell-34-value-step-1) +
      var(--cell-30-value-step-1) +
      var(--cell-29-value-step-1) +
      var(--cell-28-value-step-1)
  );
  /* game logic */
  --fewer-then-2-cell-35-step-2: max(
    calc(
      var(--cell-35-alive-neighbors-step-2) +
        var(--cell-35-value-step-1) -
        2
    ),
    0
  );
  --more-then-3-cell-35-step-2: max(
    calc(
    4 - var(--cell-35-alive-neighbors-step-2)),
    0
  );
  /* calc final value */
  --cell-35-value-step-2: min(
    calc(
      var(--fewer-then-2-cell-35-step-2) *
        var(--more-then-3-cell-35-step-2)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-0-alive-neighbors-step-3: calc(
    var(--cell-1-value-step-2) +
      var(--cell-5-value-step-2) +
      var(--cell-6-value-step-2) +
      var(--cell-7-value-step-2) +
      var(--cell-35-value-step-2) +
      var(--cell-31-value-step-2) +
      var(--cell-30-value-step-2) +
      var(--cell-29-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-0-step-3: max(
    calc(
      var(--cell-0-alive-neighbors-step-3) +
        var(--cell-0-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-0-step-3: max(
    calc(
    4 - var(--cell-0-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-0-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-0-step-3) *
        var(--more-then-3-cell-0-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-1-alive-neighbors-step-3: calc(
    var(--cell-2-value-step-2) +
      var(--cell-6-value-step-2) +
      var(--cell-7-value-step-2) +
      var(--cell-8-value-step-2) +
      var(--cell-0-value-step-2) +
      var(--cell-32-value-step-2) +
      var(--cell-31-value-step-2) +
      var(--cell-30-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-1-step-3: max(
    calc(
      var(--cell-1-alive-neighbors-step-3) +
        var(--cell-1-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-1-step-3: max(
    calc(
    4 - var(--cell-1-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-1-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-1-step-3) *
        var(--more-then-3-cell-1-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-2-alive-neighbors-step-3: calc(
    var(--cell-3-value-step-2) +
      var(--cell-7-value-step-2) +
      var(--cell-8-value-step-2) +
      var(--cell-9-value-step-2) +
      var(--cell-1-value-step-2) +
      var(--cell-33-value-step-2) +
      var(--cell-32-value-step-2) +
      var(--cell-31-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-2-step-3: max(
    calc(
      var(--cell-2-alive-neighbors-step-3) +
        var(--cell-2-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-2-step-3: max(
    calc(
    4 - var(--cell-2-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-2-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-2-step-3) *
        var(--more-then-3-cell-2-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-3-alive-neighbors-step-3: calc(
    var(--cell-4-value-step-2) +
      var(--cell-8-value-step-2) +
      var(--cell-9-value-step-2) +
      var(--cell-10-value-step-2) +
      var(--cell-2-value-step-2) +
      var(--cell-34-value-step-2) +
      var(--cell-33-value-step-2) +
      var(--cell-32-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-3-step-3: max(
    calc(
      var(--cell-3-alive-neighbors-step-3) +
        var(--cell-3-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-3-step-3: max(
    calc(
    4 - var(--cell-3-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-3-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-3-step-3) *
        var(--more-then-3-cell-3-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-4-alive-neighbors-step-3: calc(
    var(--cell-5-value-step-2) +
      var(--cell-9-value-step-2) +
      var(--cell-10-value-step-2) +
      var(--cell-11-value-step-2) +
      var(--cell-3-value-step-2) +
      var(--cell-35-value-step-2) +
      var(--cell-34-value-step-2) +
      var(--cell-33-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-4-step-3: max(
    calc(
      var(--cell-4-alive-neighbors-step-3) +
        var(--cell-4-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-4-step-3: max(
    calc(
    4 - var(--cell-4-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-4-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-4-step-3) *
        var(--more-then-3-cell-4-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-5-alive-neighbors-step-3: calc(
    var(--cell-6-value-step-2) +
      var(--cell-10-value-step-2) +
      var(--cell-11-value-step-2) +
      var(--cell-12-value-step-2) +
      var(--cell-4-value-step-2) +
      var(--cell-0-value-step-2) +
      var(--cell-35-value-step-2) +
      var(--cell-34-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-5-step-3: max(
    calc(
      var(--cell-5-alive-neighbors-step-3) +
        var(--cell-5-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-5-step-3: max(
    calc(
    4 - var(--cell-5-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-5-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-5-step-3) *
        var(--more-then-3-cell-5-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-6-alive-neighbors-step-3: calc(
    var(--cell-7-value-step-2) +
      var(--cell-11-value-step-2) +
      var(--cell-12-value-step-2) +
      var(--cell-13-value-step-2) +
      var(--cell-5-value-step-2) +
      var(--cell-1-value-step-2) +
      var(--cell-0-value-step-2) +
      var(--cell-35-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-6-step-3: max(
    calc(
      var(--cell-6-alive-neighbors-step-3) +
        var(--cell-6-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-6-step-3: max(
    calc(
    4 - var(--cell-6-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-6-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-6-step-3) *
        var(--more-then-3-cell-6-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-7-alive-neighbors-step-3: calc(
    var(--cell-8-value-step-2) +
      var(--cell-12-value-step-2) +
      var(--cell-13-value-step-2) +
      var(--cell-14-value-step-2) +
      var(--cell-6-value-step-2) +
      var(--cell-2-value-step-2) +
      var(--cell-1-value-step-2) +
      var(--cell-0-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-7-step-3: max(
    calc(
      var(--cell-7-alive-neighbors-step-3) +
        var(--cell-7-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-7-step-3: max(
    calc(
    4 - var(--cell-7-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-7-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-7-step-3) *
        var(--more-then-3-cell-7-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-8-alive-neighbors-step-3: calc(
    var(--cell-9-value-step-2) +
      var(--cell-13-value-step-2) +
      var(--cell-14-value-step-2) +
      var(--cell-15-value-step-2) +
      var(--cell-7-value-step-2) +
      var(--cell-3-value-step-2) +
      var(--cell-2-value-step-2) +
      var(--cell-1-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-8-step-3: max(
    calc(
      var(--cell-8-alive-neighbors-step-3) +
        var(--cell-8-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-8-step-3: max(
    calc(
    4 - var(--cell-8-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-8-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-8-step-3) *
        var(--more-then-3-cell-8-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-9-alive-neighbors-step-3: calc(
    var(--cell-10-value-step-2) +
      var(--cell-14-value-step-2) +
      var(--cell-15-value-step-2) +
      var(--cell-16-value-step-2) +
      var(--cell-8-value-step-2) +
      var(--cell-4-value-step-2) +
      var(--cell-3-value-step-2) +
      var(--cell-2-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-9-step-3: max(
    calc(
      var(--cell-9-alive-neighbors-step-3) +
        var(--cell-9-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-9-step-3: max(
    calc(
    4 - var(--cell-9-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-9-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-9-step-3) *
        var(--more-then-3-cell-9-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-10-alive-neighbors-step-3: calc(
    var(--cell-11-value-step-2) +
      var(--cell-15-value-step-2) +
      var(--cell-16-value-step-2) +
      var(--cell-17-value-step-2) +
      var(--cell-9-value-step-2) +
      var(--cell-5-value-step-2) +
      var(--cell-4-value-step-2) +
      var(--cell-3-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-10-step-3: max(
    calc(
      var(--cell-10-alive-neighbors-step-3) +
        var(--cell-10-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-10-step-3: max(
    calc(
    4 - var(--cell-10-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-10-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-10-step-3) *
        var(--more-then-3-cell-10-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-11-alive-neighbors-step-3: calc(
    var(--cell-12-value-step-2) +
      var(--cell-16-value-step-2) +
      var(--cell-17-value-step-2) +
      var(--cell-18-value-step-2) +
      var(--cell-10-value-step-2) +
      var(--cell-6-value-step-2) +
      var(--cell-5-value-step-2) +
      var(--cell-4-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-11-step-3: max(
    calc(
      var(--cell-11-alive-neighbors-step-3) +
        var(--cell-11-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-11-step-3: max(
    calc(
    4 - var(--cell-11-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-11-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-11-step-3) *
        var(--more-then-3-cell-11-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-12-alive-neighbors-step-3: calc(
    var(--cell-13-value-step-2) +
      var(--cell-17-value-step-2) +
      var(--cell-18-value-step-2) +
      var(--cell-19-value-step-2) +
      var(--cell-11-value-step-2) +
      var(--cell-7-value-step-2) +
      var(--cell-6-value-step-2) +
      var(--cell-5-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-12-step-3: max(
    calc(
      var(--cell-12-alive-neighbors-step-3) +
        var(--cell-12-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-12-step-3: max(
    calc(
    4 - var(--cell-12-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-12-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-12-step-3) *
        var(--more-then-3-cell-12-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-13-alive-neighbors-step-3: calc(
    var(--cell-14-value-step-2) +
      var(--cell-18-value-step-2) +
      var(--cell-19-value-step-2) +
      var(--cell-20-value-step-2) +
      var(--cell-12-value-step-2) +
      var(--cell-8-value-step-2) +
      var(--cell-7-value-step-2) +
      var(--cell-6-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-13-step-3: max(
    calc(
      var(--cell-13-alive-neighbors-step-3) +
        var(--cell-13-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-13-step-3: max(
    calc(
    4 - var(--cell-13-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-13-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-13-step-3) *
        var(--more-then-3-cell-13-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-14-alive-neighbors-step-3: calc(
    var(--cell-15-value-step-2) +
      var(--cell-19-value-step-2) +
      var(--cell-20-value-step-2) +
      var(--cell-21-value-step-2) +
      var(--cell-13-value-step-2) +
      var(--cell-9-value-step-2) +
      var(--cell-8-value-step-2) +
      var(--cell-7-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-14-step-3: max(
    calc(
      var(--cell-14-alive-neighbors-step-3) +
        var(--cell-14-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-14-step-3: max(
    calc(
    4 - var(--cell-14-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-14-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-14-step-3) *
        var(--more-then-3-cell-14-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-15-alive-neighbors-step-3: calc(
    var(--cell-16-value-step-2) +
      var(--cell-20-value-step-2) +
      var(--cell-21-value-step-2) +
      var(--cell-22-value-step-2) +
      var(--cell-14-value-step-2) +
      var(--cell-10-value-step-2) +
      var(--cell-9-value-step-2) +
      var(--cell-8-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-15-step-3: max(
    calc(
      var(--cell-15-alive-neighbors-step-3) +
        var(--cell-15-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-15-step-3: max(
    calc(
    4 - var(--cell-15-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-15-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-15-step-3) *
        var(--more-then-3-cell-15-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-16-alive-neighbors-step-3: calc(
    var(--cell-17-value-step-2) +
      var(--cell-21-value-step-2) +
      var(--cell-22-value-step-2) +
      var(--cell-23-value-step-2) +
      var(--cell-15-value-step-2) +
      var(--cell-11-value-step-2) +
      var(--cell-10-value-step-2) +
      var(--cell-9-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-16-step-3: max(
    calc(
      var(--cell-16-alive-neighbors-step-3) +
        var(--cell-16-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-16-step-3: max(
    calc(
    4 - var(--cell-16-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-16-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-16-step-3) *
        var(--more-then-3-cell-16-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-17-alive-neighbors-step-3: calc(
    var(--cell-18-value-step-2) +
      var(--cell-22-value-step-2) +
      var(--cell-23-value-step-2) +
      var(--cell-24-value-step-2) +
      var(--cell-16-value-step-2) +
      var(--cell-12-value-step-2) +
      var(--cell-11-value-step-2) +
      var(--cell-10-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-17-step-3: max(
    calc(
      var(--cell-17-alive-neighbors-step-3) +
        var(--cell-17-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-17-step-3: max(
    calc(
    4 - var(--cell-17-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-17-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-17-step-3) *
        var(--more-then-3-cell-17-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-18-alive-neighbors-step-3: calc(
    var(--cell-19-value-step-2) +
      var(--cell-23-value-step-2) +
      var(--cell-24-value-step-2) +
      var(--cell-25-value-step-2) +
      var(--cell-17-value-step-2) +
      var(--cell-13-value-step-2) +
      var(--cell-12-value-step-2) +
      var(--cell-11-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-18-step-3: max(
    calc(
      var(--cell-18-alive-neighbors-step-3) +
        var(--cell-18-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-18-step-3: max(
    calc(
    4 - var(--cell-18-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-18-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-18-step-3) *
        var(--more-then-3-cell-18-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-19-alive-neighbors-step-3: calc(
    var(--cell-20-value-step-2) +
      var(--cell-24-value-step-2) +
      var(--cell-25-value-step-2) +
      var(--cell-26-value-step-2) +
      var(--cell-18-value-step-2) +
      var(--cell-14-value-step-2) +
      var(--cell-13-value-step-2) +
      var(--cell-12-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-19-step-3: max(
    calc(
      var(--cell-19-alive-neighbors-step-3) +
        var(--cell-19-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-19-step-3: max(
    calc(
    4 - var(--cell-19-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-19-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-19-step-3) *
        var(--more-then-3-cell-19-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-20-alive-neighbors-step-3: calc(
    var(--cell-21-value-step-2) +
      var(--cell-25-value-step-2) +
      var(--cell-26-value-step-2) +
      var(--cell-27-value-step-2) +
      var(--cell-19-value-step-2) +
      var(--cell-15-value-step-2) +
      var(--cell-14-value-step-2) +
      var(--cell-13-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-20-step-3: max(
    calc(
      var(--cell-20-alive-neighbors-step-3) +
        var(--cell-20-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-20-step-3: max(
    calc(
    4 - var(--cell-20-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-20-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-20-step-3) *
        var(--more-then-3-cell-20-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-21-alive-neighbors-step-3: calc(
    var(--cell-22-value-step-2) +
      var(--cell-26-value-step-2) +
      var(--cell-27-value-step-2) +
      var(--cell-28-value-step-2) +
      var(--cell-20-value-step-2) +
      var(--cell-16-value-step-2) +
      var(--cell-15-value-step-2) +
      var(--cell-14-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-21-step-3: max(
    calc(
      var(--cell-21-alive-neighbors-step-3) +
        var(--cell-21-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-21-step-3: max(
    calc(
    4 - var(--cell-21-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-21-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-21-step-3) *
        var(--more-then-3-cell-21-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-22-alive-neighbors-step-3: calc(
    var(--cell-23-value-step-2) +
      var(--cell-27-value-step-2) +
      var(--cell-28-value-step-2) +
      var(--cell-29-value-step-2) +
      var(--cell-21-value-step-2) +
      var(--cell-17-value-step-2) +
      var(--cell-16-value-step-2) +
      var(--cell-15-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-22-step-3: max(
    calc(
      var(--cell-22-alive-neighbors-step-3) +
        var(--cell-22-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-22-step-3: max(
    calc(
    4 - var(--cell-22-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-22-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-22-step-3) *
        var(--more-then-3-cell-22-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-23-alive-neighbors-step-3: calc(
    var(--cell-24-value-step-2) +
      var(--cell-28-value-step-2) +
      var(--cell-29-value-step-2) +
      var(--cell-30-value-step-2) +
      var(--cell-22-value-step-2) +
      var(--cell-18-value-step-2) +
      var(--cell-17-value-step-2) +
      var(--cell-16-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-23-step-3: max(
    calc(
      var(--cell-23-alive-neighbors-step-3) +
        var(--cell-23-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-23-step-3: max(
    calc(
    4 - var(--cell-23-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-23-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-23-step-3) *
        var(--more-then-3-cell-23-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-24-alive-neighbors-step-3: calc(
    var(--cell-25-value-step-2) +
      var(--cell-29-value-step-2) +
      var(--cell-30-value-step-2) +
      var(--cell-31-value-step-2) +
      var(--cell-23-value-step-2) +
      var(--cell-19-value-step-2) +
      var(--cell-18-value-step-2) +
      var(--cell-17-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-24-step-3: max(
    calc(
      var(--cell-24-alive-neighbors-step-3) +
        var(--cell-24-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-24-step-3: max(
    calc(
    4 - var(--cell-24-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-24-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-24-step-3) *
        var(--more-then-3-cell-24-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-25-alive-neighbors-step-3: calc(
    var(--cell-26-value-step-2) +
      var(--cell-30-value-step-2) +
      var(--cell-31-value-step-2) +
      var(--cell-32-value-step-2) +
      var(--cell-24-value-step-2) +
      var(--cell-20-value-step-2) +
      var(--cell-19-value-step-2) +
      var(--cell-18-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-25-step-3: max(
    calc(
      var(--cell-25-alive-neighbors-step-3) +
        var(--cell-25-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-25-step-3: max(
    calc(
    4 - var(--cell-25-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-25-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-25-step-3) *
        var(--more-then-3-cell-25-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-26-alive-neighbors-step-3: calc(
    var(--cell-27-value-step-2) +
      var(--cell-31-value-step-2) +
      var(--cell-32-value-step-2) +
      var(--cell-33-value-step-2) +
      var(--cell-25-value-step-2) +
      var(--cell-21-value-step-2) +
      var(--cell-20-value-step-2) +
      var(--cell-19-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-26-step-3: max(
    calc(
      var(--cell-26-alive-neighbors-step-3) +
        var(--cell-26-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-26-step-3: max(
    calc(
    4 - var(--cell-26-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-26-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-26-step-3) *
        var(--more-then-3-cell-26-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-27-alive-neighbors-step-3: calc(
    var(--cell-28-value-step-2) +
      var(--cell-32-value-step-2) +
      var(--cell-33-value-step-2) +
      var(--cell-34-value-step-2) +
      var(--cell-26-value-step-2) +
      var(--cell-22-value-step-2) +
      var(--cell-21-value-step-2) +
      var(--cell-20-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-27-step-3: max(
    calc(
      var(--cell-27-alive-neighbors-step-3) +
        var(--cell-27-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-27-step-3: max(
    calc(
    4 - var(--cell-27-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-27-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-27-step-3) *
        var(--more-then-3-cell-27-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-28-alive-neighbors-step-3: calc(
    var(--cell-29-value-step-2) +
      var(--cell-33-value-step-2) +
      var(--cell-34-value-step-2) +
      var(--cell-35-value-step-2) +
      var(--cell-27-value-step-2) +
      var(--cell-23-value-step-2) +
      var(--cell-22-value-step-2) +
      var(--cell-21-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-28-step-3: max(
    calc(
      var(--cell-28-alive-neighbors-step-3) +
        var(--cell-28-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-28-step-3: max(
    calc(
    4 - var(--cell-28-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-28-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-28-step-3) *
        var(--more-then-3-cell-28-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-29-alive-neighbors-step-3: calc(
    var(--cell-30-value-step-2) +
      var(--cell-34-value-step-2) +
      var(--cell-35-value-step-2) +
      var(--cell-0-value-step-2) +
      var(--cell-28-value-step-2) +
      var(--cell-24-value-step-2) +
      var(--cell-23-value-step-2) +
      var(--cell-22-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-29-step-3: max(
    calc(
      var(--cell-29-alive-neighbors-step-3) +
        var(--cell-29-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-29-step-3: max(
    calc(
    4 - var(--cell-29-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-29-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-29-step-3) *
        var(--more-then-3-cell-29-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-30-alive-neighbors-step-3: calc(
    var(--cell-31-value-step-2) +
      var(--cell-35-value-step-2) +
      var(--cell-0-value-step-2) +
      var(--cell-1-value-step-2) +
      var(--cell-29-value-step-2) +
      var(--cell-25-value-step-2) +
      var(--cell-24-value-step-2) +
      var(--cell-23-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-30-step-3: max(
    calc(
      var(--cell-30-alive-neighbors-step-3) +
        var(--cell-30-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-30-step-3: max(
    calc(
    4 - var(--cell-30-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-30-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-30-step-3) *
        var(--more-then-3-cell-30-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-31-alive-neighbors-step-3: calc(
    var(--cell-32-value-step-2) +
      var(--cell-0-value-step-2) +
      var(--cell-1-value-step-2) +
      var(--cell-2-value-step-2) +
      var(--cell-30-value-step-2) +
      var(--cell-26-value-step-2) +
      var(--cell-25-value-step-2) +
      var(--cell-24-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-31-step-3: max(
    calc(
      var(--cell-31-alive-neighbors-step-3) +
        var(--cell-31-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-31-step-3: max(
    calc(
    4 - var(--cell-31-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-31-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-31-step-3) *
        var(--more-then-3-cell-31-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-32-alive-neighbors-step-3: calc(
    var(--cell-33-value-step-2) +
      var(--cell-1-value-step-2) +
      var(--cell-2-value-step-2) +
      var(--cell-3-value-step-2) +
      var(--cell-31-value-step-2) +
      var(--cell-27-value-step-2) +
      var(--cell-26-value-step-2) +
      var(--cell-25-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-32-step-3: max(
    calc(
      var(--cell-32-alive-neighbors-step-3) +
        var(--cell-32-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-32-step-3: max(
    calc(
    4 - var(--cell-32-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-32-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-32-step-3) *
        var(--more-then-3-cell-32-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-33-alive-neighbors-step-3: calc(
    var(--cell-34-value-step-2) +
      var(--cell-2-value-step-2) +
      var(--cell-3-value-step-2) +
      var(--cell-4-value-step-2) +
      var(--cell-32-value-step-2) +
      var(--cell-28-value-step-2) +
      var(--cell-27-value-step-2) +
      var(--cell-26-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-33-step-3: max(
    calc(
      var(--cell-33-alive-neighbors-step-3) +
        var(--cell-33-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-33-step-3: max(
    calc(
    4 - var(--cell-33-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-33-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-33-step-3) *
        var(--more-then-3-cell-33-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-34-alive-neighbors-step-3: calc(
    var(--cell-35-value-step-2) +
      var(--cell-3-value-step-2) +
      var(--cell-4-value-step-2) +
      var(--cell-5-value-step-2) +
      var(--cell-33-value-step-2) +
      var(--cell-29-value-step-2) +
      var(--cell-28-value-step-2) +
      var(--cell-27-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-34-step-3: max(
    calc(
      var(--cell-34-alive-neighbors-step-3) +
        var(--cell-34-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-34-step-3: max(
    calc(
    4 - var(--cell-34-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-34-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-34-step-3) *
        var(--more-then-3-cell-34-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-35-alive-neighbors-step-3: calc(
    var(--cell-0-value-step-2) +
      var(--cell-4-value-step-2) +
      var(--cell-5-value-step-2) +
      var(--cell-6-value-step-2) +
      var(--cell-34-value-step-2) +
      var(--cell-30-value-step-2) +
      var(--cell-29-value-step-2) +
      var(--cell-28-value-step-2)
  );
  /* game logic */
  --fewer-then-2-cell-35-step-3: max(
    calc(
      var(--cell-35-alive-neighbors-step-3) +
        var(--cell-35-value-step-2) -
        2
    ),
    0
  );
  --more-then-3-cell-35-step-3: max(
    calc(
    4 - var(--cell-35-alive-neighbors-step-3)),
    0
  );
  /* calc final value */
  --cell-35-value-step-3: min(
    calc(
      var(--fewer-then-2-cell-35-step-3) *
        var(--more-then-3-cell-35-step-3)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-0-alive-neighbors-step-4: calc(
    var(--cell-1-value-step-3) +
      var(--cell-5-value-step-3) +
      var(--cell-6-value-step-3) +
      var(--cell-7-value-step-3) +
      var(--cell-35-value-step-3) +
      var(--cell-31-value-step-3) +
      var(--cell-30-value-step-3) +
      var(--cell-29-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-0-step-4: max(
    calc(
      var(--cell-0-alive-neighbors-step-4) +
        var(--cell-0-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-0-step-4: max(
    calc(
    4 - var(--cell-0-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-0-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-0-step-4) *
        var(--more-then-3-cell-0-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-1-alive-neighbors-step-4: calc(
    var(--cell-2-value-step-3) +
      var(--cell-6-value-step-3) +
      var(--cell-7-value-step-3) +
      var(--cell-8-value-step-3) +
      var(--cell-0-value-step-3) +
      var(--cell-32-value-step-3) +
      var(--cell-31-value-step-3) +
      var(--cell-30-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-1-step-4: max(
    calc(
      var(--cell-1-alive-neighbors-step-4) +
        var(--cell-1-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-1-step-4: max(
    calc(
    4 - var(--cell-1-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-1-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-1-step-4) *
        var(--more-then-3-cell-1-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-2-alive-neighbors-step-4: calc(
    var(--cell-3-value-step-3) +
      var(--cell-7-value-step-3) +
      var(--cell-8-value-step-3) +
      var(--cell-9-value-step-3) +
      var(--cell-1-value-step-3) +
      var(--cell-33-value-step-3) +
      var(--cell-32-value-step-3) +
      var(--cell-31-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-2-step-4: max(
    calc(
      var(--cell-2-alive-neighbors-step-4) +
        var(--cell-2-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-2-step-4: max(
    calc(
    4 - var(--cell-2-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-2-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-2-step-4) *
        var(--more-then-3-cell-2-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-3-alive-neighbors-step-4: calc(
    var(--cell-4-value-step-3) +
      var(--cell-8-value-step-3) +
      var(--cell-9-value-step-3) +
      var(--cell-10-value-step-3) +
      var(--cell-2-value-step-3) +
      var(--cell-34-value-step-3) +
      var(--cell-33-value-step-3) +
      var(--cell-32-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-3-step-4: max(
    calc(
      var(--cell-3-alive-neighbors-step-4) +
        var(--cell-3-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-3-step-4: max(
    calc(
    4 - var(--cell-3-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-3-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-3-step-4) *
        var(--more-then-3-cell-3-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-4-alive-neighbors-step-4: calc(
    var(--cell-5-value-step-3) +
      var(--cell-9-value-step-3) +
      var(--cell-10-value-step-3) +
      var(--cell-11-value-step-3) +
      var(--cell-3-value-step-3) +
      var(--cell-35-value-step-3) +
      var(--cell-34-value-step-3) +
      var(--cell-33-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-4-step-4: max(
    calc(
      var(--cell-4-alive-neighbors-step-4) +
        var(--cell-4-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-4-step-4: max(
    calc(
    4 - var(--cell-4-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-4-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-4-step-4) *
        var(--more-then-3-cell-4-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-5-alive-neighbors-step-4: calc(
    var(--cell-6-value-step-3) +
      var(--cell-10-value-step-3) +
      var(--cell-11-value-step-3) +
      var(--cell-12-value-step-3) +
      var(--cell-4-value-step-3) +
      var(--cell-0-value-step-3) +
      var(--cell-35-value-step-3) +
      var(--cell-34-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-5-step-4: max(
    calc(
      var(--cell-5-alive-neighbors-step-4) +
        var(--cell-5-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-5-step-4: max(
    calc(
    4 - var(--cell-5-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-5-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-5-step-4) *
        var(--more-then-3-cell-5-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-6-alive-neighbors-step-4: calc(
    var(--cell-7-value-step-3) +
      var(--cell-11-value-step-3) +
      var(--cell-12-value-step-3) +
      var(--cell-13-value-step-3) +
      var(--cell-5-value-step-3) +
      var(--cell-1-value-step-3) +
      var(--cell-0-value-step-3) +
      var(--cell-35-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-6-step-4: max(
    calc(
      var(--cell-6-alive-neighbors-step-4) +
        var(--cell-6-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-6-step-4: max(
    calc(
    4 - var(--cell-6-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-6-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-6-step-4) *
        var(--more-then-3-cell-6-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-7-alive-neighbors-step-4: calc(
    var(--cell-8-value-step-3) +
      var(--cell-12-value-step-3) +
      var(--cell-13-value-step-3) +
      var(--cell-14-value-step-3) +
      var(--cell-6-value-step-3) +
      var(--cell-2-value-step-3) +
      var(--cell-1-value-step-3) +
      var(--cell-0-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-7-step-4: max(
    calc(
      var(--cell-7-alive-neighbors-step-4) +
        var(--cell-7-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-7-step-4: max(
    calc(
    4 - var(--cell-7-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-7-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-7-step-4) *
        var(--more-then-3-cell-7-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-8-alive-neighbors-step-4: calc(
    var(--cell-9-value-step-3) +
      var(--cell-13-value-step-3) +
      var(--cell-14-value-step-3) +
      var(--cell-15-value-step-3) +
      var(--cell-7-value-step-3) +
      var(--cell-3-value-step-3) +
      var(--cell-2-value-step-3) +
      var(--cell-1-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-8-step-4: max(
    calc(
      var(--cell-8-alive-neighbors-step-4) +
        var(--cell-8-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-8-step-4: max(
    calc(
    4 - var(--cell-8-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-8-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-8-step-4) *
        var(--more-then-3-cell-8-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-9-alive-neighbors-step-4: calc(
    var(--cell-10-value-step-3) +
      var(--cell-14-value-step-3) +
      var(--cell-15-value-step-3) +
      var(--cell-16-value-step-3) +
      var(--cell-8-value-step-3) +
      var(--cell-4-value-step-3) +
      var(--cell-3-value-step-3) +
      var(--cell-2-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-9-step-4: max(
    calc(
      var(--cell-9-alive-neighbors-step-4) +
        var(--cell-9-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-9-step-4: max(
    calc(
    4 - var(--cell-9-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-9-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-9-step-4) *
        var(--more-then-3-cell-9-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-10-alive-neighbors-step-4: calc(
    var(--cell-11-value-step-3) +
      var(--cell-15-value-step-3) +
      var(--cell-16-value-step-3) +
      var(--cell-17-value-step-3) +
      var(--cell-9-value-step-3) +
      var(--cell-5-value-step-3) +
      var(--cell-4-value-step-3) +
      var(--cell-3-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-10-step-4: max(
    calc(
      var(--cell-10-alive-neighbors-step-4) +
        var(--cell-10-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-10-step-4: max(
    calc(
    4 - var(--cell-10-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-10-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-10-step-4) *
        var(--more-then-3-cell-10-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-11-alive-neighbors-step-4: calc(
    var(--cell-12-value-step-3) +
      var(--cell-16-value-step-3) +
      var(--cell-17-value-step-3) +
      var(--cell-18-value-step-3) +
      var(--cell-10-value-step-3) +
      var(--cell-6-value-step-3) +
      var(--cell-5-value-step-3) +
      var(--cell-4-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-11-step-4: max(
    calc(
      var(--cell-11-alive-neighbors-step-4) +
        var(--cell-11-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-11-step-4: max(
    calc(
    4 - var(--cell-11-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-11-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-11-step-4) *
        var(--more-then-3-cell-11-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-12-alive-neighbors-step-4: calc(
    var(--cell-13-value-step-3) +
      var(--cell-17-value-step-3) +
      var(--cell-18-value-step-3) +
      var(--cell-19-value-step-3) +
      var(--cell-11-value-step-3) +
      var(--cell-7-value-step-3) +
      var(--cell-6-value-step-3) +
      var(--cell-5-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-12-step-4: max(
    calc(
      var(--cell-12-alive-neighbors-step-4) +
        var(--cell-12-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-12-step-4: max(
    calc(
    4 - var(--cell-12-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-12-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-12-step-4) *
        var(--more-then-3-cell-12-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-13-alive-neighbors-step-4: calc(
    var(--cell-14-value-step-3) +
      var(--cell-18-value-step-3) +
      var(--cell-19-value-step-3) +
      var(--cell-20-value-step-3) +
      var(--cell-12-value-step-3) +
      var(--cell-8-value-step-3) +
      var(--cell-7-value-step-3) +
      var(--cell-6-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-13-step-4: max(
    calc(
      var(--cell-13-alive-neighbors-step-4) +
        var(--cell-13-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-13-step-4: max(
    calc(
    4 - var(--cell-13-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-13-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-13-step-4) *
        var(--more-then-3-cell-13-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-14-alive-neighbors-step-4: calc(
    var(--cell-15-value-step-3) +
      var(--cell-19-value-step-3) +
      var(--cell-20-value-step-3) +
      var(--cell-21-value-step-3) +
      var(--cell-13-value-step-3) +
      var(--cell-9-value-step-3) +
      var(--cell-8-value-step-3) +
      var(--cell-7-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-14-step-4: max(
    calc(
      var(--cell-14-alive-neighbors-step-4) +
        var(--cell-14-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-14-step-4: max(
    calc(
    4 - var(--cell-14-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-14-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-14-step-4) *
        var(--more-then-3-cell-14-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-15-alive-neighbors-step-4: calc(
    var(--cell-16-value-step-3) +
      var(--cell-20-value-step-3) +
      var(--cell-21-value-step-3) +
      var(--cell-22-value-step-3) +
      var(--cell-14-value-step-3) +
      var(--cell-10-value-step-3) +
      var(--cell-9-value-step-3) +
      var(--cell-8-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-15-step-4: max(
    calc(
      var(--cell-15-alive-neighbors-step-4) +
        var(--cell-15-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-15-step-4: max(
    calc(
    4 - var(--cell-15-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-15-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-15-step-4) *
        var(--more-then-3-cell-15-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-16-alive-neighbors-step-4: calc(
    var(--cell-17-value-step-3) +
      var(--cell-21-value-step-3) +
      var(--cell-22-value-step-3) +
      var(--cell-23-value-step-3) +
      var(--cell-15-value-step-3) +
      var(--cell-11-value-step-3) +
      var(--cell-10-value-step-3) +
      var(--cell-9-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-16-step-4: max(
    calc(
      var(--cell-16-alive-neighbors-step-4) +
        var(--cell-16-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-16-step-4: max(
    calc(
    4 - var(--cell-16-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-16-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-16-step-4) *
        var(--more-then-3-cell-16-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-17-alive-neighbors-step-4: calc(
    var(--cell-18-value-step-3) +
      var(--cell-22-value-step-3) +
      var(--cell-23-value-step-3) +
      var(--cell-24-value-step-3) +
      var(--cell-16-value-step-3) +
      var(--cell-12-value-step-3) +
      var(--cell-11-value-step-3) +
      var(--cell-10-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-17-step-4: max(
    calc(
      var(--cell-17-alive-neighbors-step-4) +
        var(--cell-17-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-17-step-4: max(
    calc(
    4 - var(--cell-17-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-17-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-17-step-4) *
        var(--more-then-3-cell-17-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-18-alive-neighbors-step-4: calc(
    var(--cell-19-value-step-3) +
      var(--cell-23-value-step-3) +
      var(--cell-24-value-step-3) +
      var(--cell-25-value-step-3) +
      var(--cell-17-value-step-3) +
      var(--cell-13-value-step-3) +
      var(--cell-12-value-step-3) +
      var(--cell-11-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-18-step-4: max(
    calc(
      var(--cell-18-alive-neighbors-step-4) +
        var(--cell-18-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-18-step-4: max(
    calc(
    4 - var(--cell-18-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-18-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-18-step-4) *
        var(--more-then-3-cell-18-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-19-alive-neighbors-step-4: calc(
    var(--cell-20-value-step-3) +
      var(--cell-24-value-step-3) +
      var(--cell-25-value-step-3) +
      var(--cell-26-value-step-3) +
      var(--cell-18-value-step-3) +
      var(--cell-14-value-step-3) +
      var(--cell-13-value-step-3) +
      var(--cell-12-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-19-step-4: max(
    calc(
      var(--cell-19-alive-neighbors-step-4) +
        var(--cell-19-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-19-step-4: max(
    calc(
    4 - var(--cell-19-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-19-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-19-step-4) *
        var(--more-then-3-cell-19-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-20-alive-neighbors-step-4: calc(
    var(--cell-21-value-step-3) +
      var(--cell-25-value-step-3) +
      var(--cell-26-value-step-3) +
      var(--cell-27-value-step-3) +
      var(--cell-19-value-step-3) +
      var(--cell-15-value-step-3) +
      var(--cell-14-value-step-3) +
      var(--cell-13-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-20-step-4: max(
    calc(
      var(--cell-20-alive-neighbors-step-4) +
        var(--cell-20-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-20-step-4: max(
    calc(
    4 - var(--cell-20-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-20-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-20-step-4) *
        var(--more-then-3-cell-20-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-21-alive-neighbors-step-4: calc(
    var(--cell-22-value-step-3) +
      var(--cell-26-value-step-3) +
      var(--cell-27-value-step-3) +
      var(--cell-28-value-step-3) +
      var(--cell-20-value-step-3) +
      var(--cell-16-value-step-3) +
      var(--cell-15-value-step-3) +
      var(--cell-14-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-21-step-4: max(
    calc(
      var(--cell-21-alive-neighbors-step-4) +
        var(--cell-21-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-21-step-4: max(
    calc(
    4 - var(--cell-21-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-21-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-21-step-4) *
        var(--more-then-3-cell-21-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-22-alive-neighbors-step-4: calc(
    var(--cell-23-value-step-3) +
      var(--cell-27-value-step-3) +
      var(--cell-28-value-step-3) +
      var(--cell-29-value-step-3) +
      var(--cell-21-value-step-3) +
      var(--cell-17-value-step-3) +
      var(--cell-16-value-step-3) +
      var(--cell-15-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-22-step-4: max(
    calc(
      var(--cell-22-alive-neighbors-step-4) +
        var(--cell-22-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-22-step-4: max(
    calc(
    4 - var(--cell-22-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-22-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-22-step-4) *
        var(--more-then-3-cell-22-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-23-alive-neighbors-step-4: calc(
    var(--cell-24-value-step-3) +
      var(--cell-28-value-step-3) +
      var(--cell-29-value-step-3) +
      var(--cell-30-value-step-3) +
      var(--cell-22-value-step-3) +
      var(--cell-18-value-step-3) +
      var(--cell-17-value-step-3) +
      var(--cell-16-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-23-step-4: max(
    calc(
      var(--cell-23-alive-neighbors-step-4) +
        var(--cell-23-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-23-step-4: max(
    calc(
    4 - var(--cell-23-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-23-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-23-step-4) *
        var(--more-then-3-cell-23-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-24-alive-neighbors-step-4: calc(
    var(--cell-25-value-step-3) +
      var(--cell-29-value-step-3) +
      var(--cell-30-value-step-3) +
      var(--cell-31-value-step-3) +
      var(--cell-23-value-step-3) +
      var(--cell-19-value-step-3) +
      var(--cell-18-value-step-3) +
      var(--cell-17-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-24-step-4: max(
    calc(
      var(--cell-24-alive-neighbors-step-4) +
        var(--cell-24-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-24-step-4: max(
    calc(
    4 - var(--cell-24-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-24-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-24-step-4) *
        var(--more-then-3-cell-24-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-25-alive-neighbors-step-4: calc(
    var(--cell-26-value-step-3) +
      var(--cell-30-value-step-3) +
      var(--cell-31-value-step-3) +
      var(--cell-32-value-step-3) +
      var(--cell-24-value-step-3) +
      var(--cell-20-value-step-3) +
      var(--cell-19-value-step-3) +
      var(--cell-18-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-25-step-4: max(
    calc(
      var(--cell-25-alive-neighbors-step-4) +
        var(--cell-25-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-25-step-4: max(
    calc(
    4 - var(--cell-25-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-25-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-25-step-4) *
        var(--more-then-3-cell-25-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-26-alive-neighbors-step-4: calc(
    var(--cell-27-value-step-3) +
      var(--cell-31-value-step-3) +
      var(--cell-32-value-step-3) +
      var(--cell-33-value-step-3) +
      var(--cell-25-value-step-3) +
      var(--cell-21-value-step-3) +
      var(--cell-20-value-step-3) +
      var(--cell-19-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-26-step-4: max(
    calc(
      var(--cell-26-alive-neighbors-step-4) +
        var(--cell-26-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-26-step-4: max(
    calc(
    4 - var(--cell-26-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-26-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-26-step-4) *
        var(--more-then-3-cell-26-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-27-alive-neighbors-step-4: calc(
    var(--cell-28-value-step-3) +
      var(--cell-32-value-step-3) +
      var(--cell-33-value-step-3) +
      var(--cell-34-value-step-3) +
      var(--cell-26-value-step-3) +
      var(--cell-22-value-step-3) +
      var(--cell-21-value-step-3) +
      var(--cell-20-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-27-step-4: max(
    calc(
      var(--cell-27-alive-neighbors-step-4) +
        var(--cell-27-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-27-step-4: max(
    calc(
    4 - var(--cell-27-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-27-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-27-step-4) *
        var(--more-then-3-cell-27-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-28-alive-neighbors-step-4: calc(
    var(--cell-29-value-step-3) +
      var(--cell-33-value-step-3) +
      var(--cell-34-value-step-3) +
      var(--cell-35-value-step-3) +
      var(--cell-27-value-step-3) +
      var(--cell-23-value-step-3) +
      var(--cell-22-value-step-3) +
      var(--cell-21-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-28-step-4: max(
    calc(
      var(--cell-28-alive-neighbors-step-4) +
        var(--cell-28-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-28-step-4: max(
    calc(
    4 - var(--cell-28-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-28-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-28-step-4) *
        var(--more-then-3-cell-28-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-29-alive-neighbors-step-4: calc(
    var(--cell-30-value-step-3) +
      var(--cell-34-value-step-3) +
      var(--cell-35-value-step-3) +
      var(--cell-0-value-step-3) +
      var(--cell-28-value-step-3) +
      var(--cell-24-value-step-3) +
      var(--cell-23-value-step-3) +
      var(--cell-22-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-29-step-4: max(
    calc(
      var(--cell-29-alive-neighbors-step-4) +
        var(--cell-29-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-29-step-4: max(
    calc(
    4 - var(--cell-29-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-29-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-29-step-4) *
        var(--more-then-3-cell-29-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-30-alive-neighbors-step-4: calc(
    var(--cell-31-value-step-3) +
      var(--cell-35-value-step-3) +
      var(--cell-0-value-step-3) +
      var(--cell-1-value-step-3) +
      var(--cell-29-value-step-3) +
      var(--cell-25-value-step-3) +
      var(--cell-24-value-step-3) +
      var(--cell-23-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-30-step-4: max(
    calc(
      var(--cell-30-alive-neighbors-step-4) +
        var(--cell-30-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-30-step-4: max(
    calc(
    4 - var(--cell-30-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-30-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-30-step-4) *
        var(--more-then-3-cell-30-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-31-alive-neighbors-step-4: calc(
    var(--cell-32-value-step-3) +
      var(--cell-0-value-step-3) +
      var(--cell-1-value-step-3) +
      var(--cell-2-value-step-3) +
      var(--cell-30-value-step-3) +
      var(--cell-26-value-step-3) +
      var(--cell-25-value-step-3) +
      var(--cell-24-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-31-step-4: max(
    calc(
      var(--cell-31-alive-neighbors-step-4) +
        var(--cell-31-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-31-step-4: max(
    calc(
    4 - var(--cell-31-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-31-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-31-step-4) *
        var(--more-then-3-cell-31-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-32-alive-neighbors-step-4: calc(
    var(--cell-33-value-step-3) +
      var(--cell-1-value-step-3) +
      var(--cell-2-value-step-3) +
      var(--cell-3-value-step-3) +
      var(--cell-31-value-step-3) +
      var(--cell-27-value-step-3) +
      var(--cell-26-value-step-3) +
      var(--cell-25-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-32-step-4: max(
    calc(
      var(--cell-32-alive-neighbors-step-4) +
        var(--cell-32-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-32-step-4: max(
    calc(
    4 - var(--cell-32-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-32-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-32-step-4) *
        var(--more-then-3-cell-32-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-33-alive-neighbors-step-4: calc(
    var(--cell-34-value-step-3) +
      var(--cell-2-value-step-3) +
      var(--cell-3-value-step-3) +
      var(--cell-4-value-step-3) +
      var(--cell-32-value-step-3) +
      var(--cell-28-value-step-3) +
      var(--cell-27-value-step-3) +
      var(--cell-26-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-33-step-4: max(
    calc(
      var(--cell-33-alive-neighbors-step-4) +
        var(--cell-33-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-33-step-4: max(
    calc(
    4 - var(--cell-33-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-33-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-33-step-4) *
        var(--more-then-3-cell-33-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-34-alive-neighbors-step-4: calc(
    var(--cell-35-value-step-3) +
      var(--cell-3-value-step-3) +
      var(--cell-4-value-step-3) +
      var(--cell-5-value-step-3) +
      var(--cell-33-value-step-3) +
      var(--cell-29-value-step-3) +
      var(--cell-28-value-step-3) +
      var(--cell-27-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-34-step-4: max(
    calc(
      var(--cell-34-alive-neighbors-step-4) +
        var(--cell-34-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-34-step-4: max(
    calc(
    4 - var(--cell-34-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-34-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-34-step-4) *
        var(--more-then-3-cell-34-step-4)
    ),
    1
  );
  /* calc alive neighbors of cell */
  --cell-35-alive-neighbors-step-4: calc(
    var(--cell-0-value-step-3) +
      var(--cell-4-value-step-3) +
      var(--cell-5-value-step-3) +
      var(--cell-6-value-step-3) +
      var(--cell-34-value-step-3) +
      var(--cell-30-value-step-3) +
      var(--cell-29-value-step-3) +
      var(--cell-28-value-step-3)
  );
  /* game logic */
  --fewer-then-2-cell-35-step-4: max(
    calc(
      var(--cell-35-alive-neighbors-step-4) +
        var(--cell-35-value-step-3) -
        2
    ),
    0
  );
  --more-then-3-cell-35-step-4: max(
    calc(
    4 - var(--cell-35-alive-neighbors-step-4)),
    0
  );
  /* calc final value */
  --cell-35-value-step-4: min(
    calc(
      var(--fewer-then-2-cell-35-step-4) *
        var(--more-then-3-cell-35-step-4)
    ),
    1
  );
}

@keyframes cell-0 {
  0% {
    filter: contrast(var(--cell-0-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-0-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-0-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-0-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-0-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-1 {
  0% {
    filter: contrast(var(--cell-1-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-1-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-1-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-1-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-1-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-2 {
  0% {
    filter: contrast(var(--cell-2-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-2-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-2-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-2-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-2-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-3 {
  0% {
    filter: contrast(var(--cell-3-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-3-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-3-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-3-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-3-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-4 {
  0% {
    filter: contrast(var(--cell-4-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-4-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-4-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-4-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-4-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-5 {
  0% {
    filter: contrast(var(--cell-5-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-5-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-5-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-5-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-5-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-6 {
  0% {
    filter: contrast(var(--cell-6-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-6-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-6-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-6-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-6-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-7 {
  0% {
    filter: contrast(var(--cell-7-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-7-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-7-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-7-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-7-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-8 {
  0% {
    filter: contrast(var(--cell-8-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-8-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-8-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-8-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-8-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-9 {
  0% {
    filter: contrast(var(--cell-9-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-9-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-9-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-9-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-9-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-10 {
  0% {
    filter: contrast(var(--cell-10-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-10-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-10-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-10-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-10-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-11 {
  0% {
    filter: contrast(var(--cell-11-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-11-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-11-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-11-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-11-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-12 {
  0% {
    filter: contrast(var(--cell-12-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-12-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-12-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-12-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-12-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-13 {
  0% {
    filter: contrast(var(--cell-13-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-13-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-13-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-13-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-13-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-14 {
  0% {
    filter: contrast(var(--cell-14-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-14-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-14-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-14-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-14-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-15 {
  0% {
    filter: contrast(var(--cell-15-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-15-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-15-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-15-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-15-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-16 {
  0% {
    filter: contrast(var(--cell-16-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-16-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-16-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-16-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-16-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-17 {
  0% {
    filter: contrast(var(--cell-17-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-17-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-17-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-17-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-17-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-18 {
  0% {
    filter: contrast(var(--cell-18-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-18-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-18-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-18-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-18-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-19 {
  0% {
    filter: contrast(var(--cell-19-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-19-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-19-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-19-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-19-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-20 {
  0% {
    filter: contrast(var(--cell-20-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-20-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-20-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-20-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-20-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-21 {
  0% {
    filter: contrast(var(--cell-21-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-21-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-21-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-21-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-21-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-22 {
  0% {
    filter: contrast(var(--cell-22-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-22-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-22-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-22-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-22-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-23 {
  0% {
    filter: contrast(var(--cell-23-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-23-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-23-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-23-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-23-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-24 {
  0% {
    filter: contrast(var(--cell-24-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-24-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-24-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-24-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-24-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-25 {
  0% {
    filter: contrast(var(--cell-25-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-25-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-25-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-25-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-25-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-26 {
  0% {
    filter: contrast(var(--cell-26-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-26-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-26-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-26-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-26-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-27 {
  0% {
    filter: contrast(var(--cell-27-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-27-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-27-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-27-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-27-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-28 {
  0% {
    filter: contrast(var(--cell-28-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-28-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-28-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-28-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-28-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-29 {
  0% {
    filter: contrast(var(--cell-29-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-29-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-29-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-29-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-29-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-30 {
  0% {
    filter: contrast(var(--cell-30-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-30-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-30-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-30-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-30-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-31 {
  0% {
    filter: contrast(var(--cell-31-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-31-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-31-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-31-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-31-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-32 {
  0% {
    filter: contrast(var(--cell-32-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-32-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-32-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-32-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-32-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-33 {
  0% {
    filter: contrast(var(--cell-33-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-33-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-33-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-33-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-33-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-34 {
  0% {
    filter: contrast(var(--cell-34-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-34-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-34-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-34-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-34-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
@keyframes cell-35 {
  0% {
    filter: contrast(var(--cell-35-value-step-0));
  }
  15% {
    filter: contrast(var(--cell-35-value-step-1));
  }
  30% {
    filter: contrast(var(--cell-35-value-step-2));
  }
  45% {
    filter: contrast(var(--cell-35-value-step-3));
  }
  60% {
    filter: contrast(var(--cell-35-value-step-4));
  }
  80% {
    filter: contrast(0);
  }
}
.cell:nth-child(1) {
  animation: cell-0 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-0-value-step-0));
}

.cell:nth-child(2) {
  animation: cell-1 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-1-value-step-0));
}

.cell:nth-child(3) {
  animation: cell-2 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-2-value-step-0));
}

.cell:nth-child(4) {
  animation: cell-3 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-3-value-step-0));
}

.cell:nth-child(5) {
  animation: cell-4 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-4-value-step-0));
}

.cell:nth-child(6) {
  animation: cell-5 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-5-value-step-0));
}

.cell:nth-child(7) {
  animation: cell-6 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-6-value-step-0));
}

.cell:nth-child(8) {
  animation: cell-7 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-7-value-step-0));
}

.cell:nth-child(9) {
  animation: cell-8 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-8-value-step-0));
}

.cell:nth-child(10) {
  animation: cell-9 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-9-value-step-0));
}

.cell:nth-child(11) {
  animation: cell-10 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-10-value-step-0));
}

.cell:nth-child(12) {
  animation: cell-11 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-11-value-step-0));
}

.cell:nth-child(13) {
  animation: cell-12 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-12-value-step-0));
}

.cell:nth-child(14) {
  animation: cell-13 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-13-value-step-0));
}

.cell:nth-child(15) {
  animation: cell-14 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-14-value-step-0));
}

.cell:nth-child(16) {
  animation: cell-15 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-15-value-step-0));
}

.cell:nth-child(17) {
  animation: cell-16 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-16-value-step-0));
}

.cell:nth-child(18) {
  animation: cell-17 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-17-value-step-0));
}

.cell:nth-child(19) {
  animation: cell-18 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-18-value-step-0));
}

.cell:nth-child(20) {
  animation: cell-19 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-19-value-step-0));
}

.cell:nth-child(21) {
  animation: cell-20 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-20-value-step-0));
}

.cell:nth-child(22) {
  animation: cell-21 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-21-value-step-0));
}

.cell:nth-child(23) {
  animation: cell-22 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-22-value-step-0));
}

.cell:nth-child(24) {
  animation: cell-23 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-23-value-step-0));
}

.cell:nth-child(25) {
  animation: cell-24 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-24-value-step-0));
}

.cell:nth-child(26) {
  animation: cell-25 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-25-value-step-0));
}

.cell:nth-child(27) {
  animation: cell-26 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-26-value-step-0));
}

.cell:nth-child(28) {
  animation: cell-27 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-27-value-step-0));
}

.cell:nth-child(29) {
  animation: cell-28 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-28-value-step-0));
}

.cell:nth-child(30) {
  animation: cell-29 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-29-value-step-0));
}

.cell:nth-child(31) {
  animation: cell-30 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-30-value-step-0));
}

.cell:nth-child(32) {
  animation: cell-31 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-31-value-step-0));
}

.cell:nth-child(33) {
  animation: cell-32 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-32-value-step-0));
}

.cell:nth-child(34) {
  animation: cell-33 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-33-value-step-0));
}

.cell:nth-child(35) {
  animation: cell-34 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-34-value-step-0));
}

.cell:nth-child(36) {
  animation: cell-35 6s ease-in-out 1s infinite;
  filter: contrast(var(--cell-35-value-step-0));
}

body {
  background-color: #242224;
}

.container {
  display: flex;
  justify-content: center;
}

.grid {
  display: grid;
  grid-template-columns: auto auto auto auto auto auto;
  gap: 0.5rem;
  margin-top: 4rem;
}

.cell {
  width: 4rem;
  height: 4rem;
  background-color: #19EB89;
  border-radius: 0.5rem;
}

/*# sourceMappingURL=styles.css.map */
